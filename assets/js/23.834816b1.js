(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{223:function(t,a,e){"use strict";e.r(a);var n=e(0),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"watcher"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#watcher"}},[t._v("#")]),t._v(" Watcher")]),t._v(" "),e("p",[t._v("参照"),e("router-link",{attrs:{to:"/my/md/htmls/watcher.html"}},[t._v("watcher.html")]),t._v("的代码看问题。")],1),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Watcher")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("vm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Component"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    expOrFn"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" string "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Function"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    cb"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Function"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    options"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Object")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vm "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vm\n      vm"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_watchers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[e("code",[t._v("Watcher")]),t._v("到底是个什么角色？在一个 Vue 实例(VueComponent 也是 Vue 实例)，如果实例针对某个“属性”发生变化时要触发一些操作，那这种“订阅”操作就由 Watcher 去代理。")]),t._v(" "),e("p",[t._v("在 watcher.html 的代码里，当点击 button 时，"),e("code",[t._v("counter")]),t._v(" 会发生改变，从而导致 p 标签显示发生变化，这是个 render 渲染过程，"),e("code",[t._v("vm")]),t._v(" 创建了一个 "),e("code",[t._v("watcher")]),t._v(" 专门来做这件事，创建时传入的第二个参数 "),e("code",[t._v("expOrFn")]),t._v(" 是个回调方法，"),e("code",[t._v("updateComponent = () => {vm._update(vm._render(), hydrating)}")]),t._v(",这个 watcher 是个 render watcher，用来改变渲染的。那如果再加个 button，点击后改变另外个属性，也有个对应的 p 标签发生变化，会不会创建另外个 render watcher 呢？"),e("strong",[t._v("不会的")]),t._v("。render watcher 的职责是渲染发生变化时修改 vm 的显示，而不是修改 vm 某个标签的显示，"),e("strong",[t._v("只有一个")]),t._v("。但是这并不是说一个 vm 只有一个 watcher 哦。代码里有 watch 属性，它观察住另外两个属性 "),e("code",[t._v("counter")]),t._v(" 和 "),e("code",[t._v("oddOrEven")]),t._v("，他们发生变化后会执行对应的操作，那这个时候就会分别创建对应的 "),e("code",[t._v("watcher")]),t._v(" 实例，传入的 "),e("code",[t._v("expOrFn")]),t._v(" 就是 "),e("code",[t._v("counter")]),t._v(" 和 "),e("code",[t._v("oddOrEven")]),t._v("这俩字符串(所以源码里 "),e("code",[t._v("expOrFn")]),t._v(" 的类型是 "),e("code",[t._v("String|Function")]),t._v(")，而 "),e("code",[t._v("cb")]),t._v(" 就是 watch 里它们各自对应的回调方法了。所以打印 "),e("code",[t._v("vm")]),t._v(" 的"),e("code",[t._v("_watchers")]),t._v(" 属性里面有 3 个 watcher 实例。")]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("vm._watcher")]),t._v(" 是 "),e("code",[t._v("vm")]),t._v(" 的 render watcher，只有一个，所有的更新操作都由它代理了。"),e("code",[t._v("vm._watchers")]),t._v(" 是 vm 的所有的 watcher 的集合.")])]),t._v(" "),e("p",[t._v("new Vue => this._init(options) => initState(vm) => initWatch(vm, opts.watch) => createWatcher(vm, key, handler) => vm.$watch(expOrFn, handler, options) => var watcher = new Watcher(vm, expOrFn, cb, options);")]),t._v(" "),e("p",[e("code",[t._v("flushSchedulerQueue")]),t._v(" 会执行所有的 "),e("code",[t._v("watcher.run()")]),t._v(" ，执行完后  "),e("code",[t._v("callUpdatedHooks(updatedQueue)")]),t._v("，在 "),e("code",[t._v("callUpdatedHooks")]),t._v(" 里会对队列的 watcher 进行判断，如果 "),e("code",[t._v("watcher.vm._watcher === watcher")]),t._v(" ，那这个 watcher 就是这个 vm 实例的 render watcher ，继续判断 "),e("code",[t._v("vm._isMounted")]),t._v(" ,如果已经挂载了，就调用钩子函数 "),e("code",[t._v("callHook(vm, 'updated')")]),t._v(" 完成一次更新.")]),t._v(" "),e("p",[e("code",[t._v("watcher.user")]),t._v(" 表示这个 watcher 是用户自己定义的 watcher ，而不是 Vue 内部自己生成的，用于组件内的 watch 侦听器。")])])}),[],!1,null,null,null);a.default=s.exports}}]);