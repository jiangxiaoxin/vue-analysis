(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{217:function(e,v,_){"use strict";_.r(v);var c=_(0),t=Object(c.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[e._v("在《深入响应式原理》里，完成通知的是靠"),_("code",[e._v("Publisher-Subscriber")]),_("strong",[e._v("发布-订阅")]),e._v("模式。很多地方说到一个观察者模式"),_("code",[e._v("Observer Design Pattern")]),e._v(",这两个模式其实不是一个模式，只是有些类似的地方。")]),e._v(" "),_("h3",{attrs:{id:"相同"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#相同"}},[e._v("#")]),e._v(" 相同")]),e._v(" "),_("p",[e._v("两种模式的目的是一致的，都是为了实现一种机制：当一个“事件”发生后，对这个“事件”敏感的“对象”会发觉并做出响应。")]),e._v(" "),_("h3",{attrs:{id:"不同"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#不同"}},[e._v("#")]),e._v(" 不同")]),e._v(" "),_("p",[e._v("观察者模式由两部分组成，"),_("code",[e._v("Subject")]),e._v("和"),_("code",[e._v("Observer")]),e._v("。简单的描述就是，"),_("code",[e._v("Subject")]),e._v("里有一个数组，存放的就是对它“敏感”的"),_("code",[e._v("Observer")]),e._v("们的引用,当发生事件需要通知到到观察者时，"),_("code",[e._v("Subject")]),e._v("会调用自己的"),_("code",[e._v("notify")]),e._v("方法，然后逐一执行观察者们统一的方法"),_("code",[e._v("update")]),e._v(",这样子观察者就对事件作出了响应。")]),e._v(" "),_("p",[e._v("发布-订阅模式完成的功能与此类似，但组成明显不同。"),_("code",[e._v("Publisher")]),e._v("发出事件，它只关心完成这一部分功能，发出之后就不管了。"),_("code",[e._v("Subscriber")]),e._v("只关心已经表示要订阅某个事件了，其余的不关心。真正串联起来这两端的是中间的控制中心"),_("code",[e._v("event bus")]),e._v("。由控制中心去记录谁订阅了什么事件，在事件发出后，由控制中心去通知订阅者。")]),e._v(" "),_("p",[e._v("在观察者模式中，组成系统的两端是强耦合的，谁都知道谁。在发布-订阅模式中，系统的两端是松耦合的，两端之间没有直接的联系，而是通过中间的控制中心去关联功能。")]),e._v(" "),_("p",[e._v("在"),_("code",[e._v("_init")]),e._v("方法里执行"),_("code",[e._v("initLifecycle")]),e._v("时"),_("code",[e._v("vm._watcher = null")]),e._v(",也就是Vue实例在创建的一开始是没有对应的"),_("code",[e._v("Watcher")]),e._v("的。"),_("code",[e._v("Watcher")]),e._v("就是“监视”行为的中间人，这个"),_("code",[e._v("Vue")]),e._v("实例把监视和更新交给了第三者"),_("code",[e._v("Watcher")]),e._v(",这也就是上面说的"),_("code",[e._v("Vue")]),e._v("用的是"),_("code",[e._v("Publisher-Subscriber")]),e._v("模式，用中间人代理互动，而不是直接的"),_("code",[e._v("Observer pattern")]),e._v("。一个对象的某个值对应一个"),_("code",[e._v("Dep")]),e._v("实例，这个"),_("code",[e._v("Dep")]),e._v("实例会搜集所以对它感兴趣的"),_("code",[e._v("Watcher")]),e._v("实例，当这个值发生变化时，会调用"),_("code",[e._v("Watcher")]),e._v("的"),_("code",[e._v("update")]),e._v("对象，进而调用实例化"),_("code",[e._v("Watcher")]),e._v("时传入的更新方法，更新对这个对象“感兴趣”的另外那个实例")]),e._v(" "),_("blockquote",[_("p",[e._v("一个"),_("code",[e._v("dep")]),e._v("可以有多个"),_("code",[e._v("watcher")]),e._v("关注着它，一个"),_("code",[e._v("watcher")]),e._v("也可以对多个"),_("code",[e._v("dep")]),e._v("感兴趣.")])])])}),[],!1,null,null,null);v.default=t.exports}}]);